@page "/medioscontacto"
@page "/mediosContacto/{id:int}"
@using BlazorContactos.Shared.DTOS.MediosContactos

@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>MediosContacto</h3>

<EditForm Model="mediosContacto" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="col-lg-12">
        <div class="mb-3">
            <label class="form-label">Tipo de Contacto</label>
            <InputText id="TipoContacto" class="form-control" @bind-Value="@mediosContacto.TipoContacto" />
            <ValidationMessage For="@(() => mediosContacto.TipoContacto)" />
        </div>
    </div>
    <div class="col-lg-12">
        <div class="mb-3">
            <label class="form-label">Contacto</label>
            <InputText id="Contacto" class="form-control" @bind-Value="@mediosContacto.Contacto" />
            <ValidationMessage For="@(() => mediosContacto.Contacto)" />
        </div>
    </div>

    <div class="col-1g-12 text-end mb-3 pt-4">
        <hr />
        <button type="button" class="btn btn-danger" onclick="history.back()">Cancelar</button>
        <button type="submit" class="btn btn-success">Guardar</button>
    </div>



</EditForm>

@code {
    protected MediosContactoDto mediosContacto = new MediosContactoDto();
    [Parameter] public int id { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
        {
            var response = await httpClient.GetFromJsonAsync<MediosContactoDto>($"api/MediosContactos/{id}");
            if (response != null)
            {
                mediosContacto = response;
            }
        }
    }

    private async Task OnValidSubmit()
    {
        if (id > 0)
        {
            await httpClient.PutAsJsonAsync<MediosContactoDto>("api/MediosContactos", mediosContacto);
        }
        else
        {
            await httpClient.PostAsJsonAsync<MediosContactoDto>("api/MediosContactos", mediosContacto);
        }

        navigationManager.NavigateTo("mediosContactos");
    }

}
